<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Settings on Michael&#39;s Blog</title>
        <link>//localhost:1313/tags/settings/</link>
        <description>Recent content in Settings on Michael&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>Michael Belivanakis (a.k.a. Mike Nakis)</copyright>
        <lastBuildDate>Fri, 17 Oct 2025 19:58:51 +0200</lastBuildDate><atom:link href="//localhost:1313/tags/settings/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>How to organize a Visual Studio Solution</title>
        <link>//localhost:1313/post/2024-06-visual-studio-solutions/</link>
        <pubDate>Fri, 07 Jun 2024 15:58:23 +0000</pubDate>
        
        <guid>//localhost:1313/post/2024-06-visual-studio-solutions/</guid>
        <description>&lt;p&gt;&lt;img src=&#34;//localhost:1313/post/2024-06-visual-studio-solutions/images/microsoft-visual-studio-2022-logo.svg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;

Visual Studio is a capricious product, and its &amp;ldquo;Solution&amp;rdquo; subsystem is especially capricious. When you look at what options are available you might think you have a great degree of freedom to structure things the way you want, but as you will inevitably (and painfully) find out later, many things have to be done in precisely one, entirely undocumented way, or else there will be pain of the worst kind: Visual Studio will malfunction either without any error message, or with error messages that are completely unhelpful for locating and fixing the problem.&lt;/p&gt;
&lt;p&gt;Here is a list of things I have (painfully) found out over the years.&lt;/p&gt;
&lt;p&gt;(Useful pre-reading: &lt;a 
   href=&#34;//localhost:1313/post/2022-11-about-these-papers/&#34;
   &gt;About these papers&lt;/a&gt;)&lt;/p&gt;
&lt;h3 id=&#34;the-project-directory-structure-must-be-entirely-flat&#34;&gt;The project directory structure must be entirely flat.
&lt;/h3&gt;&lt;p&gt;All project files must reside in directories that are immediate sub-directories of the solution directory. When adding a project you are given the freedom to put it in a directory anywhere you want, but if you don&amp;rsquo;t put it in a directory exactly under the solution directory, you are going to run into trouble later.&lt;/p&gt;
&lt;p&gt;If you have hundreds of projects, and you are thinking that putting them all in one directory is insane, welcome to the Microsoft world, where insane is the order of the day.&lt;/p&gt;
&lt;p&gt;From within Visual Studio, you can create what Microsoft calls &amp;ldquo;Solution Folders&amp;rdquo; to arrange your projects in a hierarchy at least within Visual
Studio&amp;rsquo;s &amp;ldquo;Solution Explorer&amp;rdquo; panel, but even this has a caveat, keep reading.&lt;/p&gt;
&lt;h3 id=&#34;the-startup-project-must-be-listed-first-in-the-solution-file&#34;&gt;The startup project must be listed first in the solution file.
&lt;/h3&gt;&lt;p&gt;Solution files are, luckily, text files. Solution files with the .sln extension are in a ridiculous ad-hoc format consisting of, among other things, entries delimited with &amp;ldquo;Project&amp;rdquo; and &amp;ldquo;EndProject&amp;rdquo; and making use of GUIDs to discourage anyone from touching it or even looking at it. Luckily they have now introduced .slnx files, which are a bit more lean, but they are now in XML, (Microsoft seems to be stuck in the 1980&amp;rsquo;s,) so they are still far more verbose than necessary, and they still contain GUIDs here and there. Regardless of the file format, you are free to edit the solution file and re-order these entries in any way you like, and it seems to have absolutely no effect because the Visual Studio Solution Explorer will sort them alphabetically anyway, but there is one kind of re-ordering that you can do which actually matters: The entry which stands for your startup project must be the first entry.&lt;/p&gt;
&lt;p&gt;If you do not do this, then each time you delete the .vs directory, restart Visual Studio, and try to launch your solution, you will be greeted with the all too familiar, extremely annoying, and extremely stupid message which says that you cannot launch a project which builds a library instead of an executable. This is happening because when the .vs directory is deleted, Visual Studio forgets the startup project, and when Visual Studio is launched with no startup project configured it absolutely has to establish a startup project, and it absolutely has to do this automatically, without asking you. In doing so, it picks the first project that it finds in the solution file, and it is not smart enough to skip projects that build libraries instead of executables.&lt;/p&gt;
&lt;h3 id=&#34;the-startup-project-must-not-be-nested-in-a-solution-folder&#34;&gt;The startup project must not be nested in a solution folder.
&lt;/h3&gt;&lt;p&gt;As mentioned earlier, you can use &amp;ldquo;Solution Folders&amp;rdquo; to arrange your projects in a hierarchy; however, the project that you usually want to have as the startup project must not be nested in a solution folder, it must be placed right under the root node of the solution.&lt;/p&gt;
&lt;p&gt;If you nest your startup project in a solution folder, then Visual Studio will again, entirely capriciously, ignore it when automatically selecting a project as the startup project each time you delete the .vs directory.&lt;/p&gt;
&lt;h3 id=&#34;test-projects-must-be-given-names-that-end-in--test-yes-that-is-a-space&#34;&gt;Test projects must be given names that end in &amp;quot; Test&amp;quot;. (Yes, that is a space.)
&lt;/h3&gt;&lt;p&gt;Usually, projects come in pairs: there is a production project, and a test project. Usually, we give the test project the same name as the production
project, with a suitable suffix to indicate that this is a test project. If your production project is called &amp;ldquo;Covfefe&amp;rdquo;, you might think that you have
plenty of options to call your test project: &amp;ldquo;CovfefeTest&amp;rdquo;, &amp;ldquo;Covfefe.Test&amp;rdquo;, &amp;ldquo;Covfefe-Test&amp;rdquo;, &amp;ldquo;Covfefe_Test&amp;rdquo;, etc. Actually, none of these will work. You have to call it &amp;ldquo;Covfefe Test&amp;rdquo;, with a space before &amp;ldquo;Test&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;This is because the Visual Studio Solution Explorer uses different sorting rules from Windows File Explorer, so if you use anything but &amp;quot; Test&amp;quot; as a suffix for test projects you will find your projects listed in a different order between the Solution Explorer and the File Explorer. Depending on what you choose, your test projects will appear either before or after your production projects, either in Solution Explorer or in File Explorer, but not in both. The only trick I have been able to find which causes the test projects to always be listed after the production projects both in Solution Explorer and in File Explorer is to make each test project name consist of the production project name suffixed with &amp;quot; Test&amp;quot; (with a space.)&lt;/p&gt;
&lt;p&gt;Aaaand, of course, even with this, there is a catch: if you name your projects as I suggested, they will appear in the wrong order when viewing your solution directory on GitHub. Because GitHub uses yet different sorting rules. So, there is no way to achieve a consistent look both in Windows File Explorer, and Visual Studio Solution Explorer, and GitHub.&lt;/p&gt;
&lt;h4 id=&#34;solution-items-must-be-placed-in-a-custom-_solution-items-folder&#34;&gt;Solution items must be placed in a custom &amp;ldquo;_Solution Items&amp;rdquo; folder.
&lt;/h4&gt;&lt;p&gt;Solution-level items are a fiasco to begin with; they only exist because the Visual Studio Solution Explorer capriciously hides solution-level files from the user. Instead, Visual Studio offers the &amp;ldquo;Solution Items&amp;rdquo; workaround, which is a solution folder under the solution node where you can manually place links to solution-level files that you want to be able to access. (Because having to manually create links to your own files so that you can access them is always fun.)&lt;/p&gt;
&lt;p&gt;The default name that Visual Studio gives to this folder is &amp;ldquo;Solution Items&amp;rdquo;. The first thing you must do with it is to rename it to &amp;ldquo;_Solution Items&amp;rdquo;, so that it will be sorted first in the list, otherwise it will be hidden among other solution folders.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Old comments&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Anonymous 2024-12-27 16:05:14 UTC&lt;/p&gt;
&lt;p&gt;Thank you for sharing your experiences and all the useful info.
Visual Studio is increasingly becoming such a bloatware, while still missing quite a lot of basic fundamental functionality.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>Mouse Wheel Natural Scrolling in Windows</title>
        <link>//localhost:1313/post/2022-03-mouse-natural-scrolling/</link>
        <pubDate>Wed, 16 Mar 2022 09:55:12 +0000</pubDate>
        
        <guid>//localhost:1313/post/2022-03-mouse-natural-scrolling/</guid>
        <description>&lt;p&gt;&lt;img src=&#34;//localhost:1313/post/2022-03-mouse-natural-scrolling/media/mouse-and-wheel.jpg&#34;
	width=&#34;640&#34;
	height=&#34;225&#34;
	srcset=&#34;//localhost:1313/post/2022-03-mouse-natural-scrolling/media/mouse-and-wheel_hu_e10eea3d8d8f8ad3.jpg 480w, //localhost:1313/post/2022-03-mouse-natural-scrolling/media/mouse-and-wheel_hu_c6a8fcd1fcd7c75f.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;284&#34;
		data-flex-basis=&#34;682px&#34;
	
&gt;
&lt;/p&gt;
&lt;p&gt;Some time ago and for about a year I used a Mac, which had natural scrolling by default. I decided to resist the urge to immediately configure it to work like Windows, and instead I made it a point to give natural scrolling a try for at least a while before making up my mind as to whether to keep it or lose it. While giving it a try, I was surprised to see that it was very easy for me to adjust to it, despite the fact that I have been using the unnatural Windows scrolling mode for nearly 30 years. (Ever since the mouse wheel became a thing.) I found that natural scrolling was indeed&amp;hellip; natural. So, I kept using it, and I became addicted to it. Ever since then, I always have to configure natural scrolling on any Windows machine that I get my hands on before I can start using that machine.&lt;/p&gt;
&lt;p&gt;Windows is so poor that it does not offer any user interface through which a novice user can change the mouse wheel scrolling mode. To do that you have to edit the registry, and the setting you are going to be modifying is a machine setting, so you will be affecting the mouse wheel mode for all users, not just for yourself. This is unbelievably lame, but hey, that&amp;rsquo;s Windows, we are totally used to lame.&lt;/p&gt;
&lt;p&gt;There exists a procedure for finding a specific mouse device and modifying the wheel mode of only that device, but it is a hassle, and it does not even guarantee that you will be modifying the settings for the right device, so we will be skipping that procedure and modifying the setting for all mouse devices that are currently connected or have ever been connected. If a new mouse is connected to the system, the procedure will need to be repeated.&lt;/p&gt;
&lt;p&gt;Luckily, I do not have any contractual obligations to give warnings regarding the alleged dangers of modifying the registry; so, without further ado, here is what you need to do in order to configure natural scrolling under Windows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open up RegEdit, and navigate to the following key:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Computer\HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Enum\HID&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Search for values named FlipFlopWheel&lt;/li&gt;
&lt;li&gt;For each value you find, if the data is 0, change the data to 1.&lt;/li&gt;
&lt;li&gt;You are done when &lt;em&gt;Find Next&lt;/em&gt; (F3) starts yielding results that are outside of the above key. (i.e. when you reach Computer\HKEY_LOCAL_MACHINE\SYSTEM\DriverDatabase.)&lt;/li&gt;
&lt;li&gt;Restart Windows.  (Logging out and back in will not work, because remember, this is a Windows-wide setting, not a per-user setting.)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;Cover image: Artwork by michael.gr based on original mouse-15887 by Arkthus from the Noun Project&lt;/p&gt;</description>
        </item>
        
    </channel>
</rss>
